@page "/"

@using CrudYTB.models
@inject IJSRuntime JSRuntime
@inject CrudYTB.Services.ICompanyServices CompanyService;

<PageTitle>Empresas</PageTitle>

<h1>Empresas</h1>

<a href="/create" class="btn btn-sucess"> Criar</a>

<table class="table table-reponsive table-striped">
    <thead>
        <tr>
            <th>id</th>
            <th>Nome</th>
            <th>Telefone</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if(companies != null && companies.Count > 0)
          {
                foreach(var item in companies)
                {
                    <tr>
                        <td> @item.Id</td>
                        <td> @item.Name</td>
                        <td >@item.Phone</td>
                        <td>
                            <a href="/update/@item.Id" class="btn btn-warning"> Atualizar </a>
                            <button class="btn btn-danger" @onclick="async () => await DeleteCompany(item.Id)">Deletar</button>
                        </td>
                    </tr>
                }
          }
    </tbody>

</table>


@code {
    List<Company> companies = new();

    protected override async Task OnInitializedAsync()
    {
        companies = await CompanyService.FindAll();
    }
    async Task DeleteCompany (Guid id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja deletar?");
        if (confirmed is false)
            return;
        var company = await CompanyService.GetBy(id);

        await CompanyService.Delete(company);

        companies = await CompanyService.FindAll();

        StateHasChanged();
    }
 }
